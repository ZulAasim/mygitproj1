name: Generate Changelog on Release

on:
  release:
    types: [published]

jobs:
  update_changelog:
    runs-on: ubuntu-latest

    permissions:
      contents: write # Essential for pushing back to the repo

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install

      - name: Generate Changelog
        run: npm run changelog

      - name: Get the current release tag
        id: get_release_tag
        run: echo "::set-output name=tag_name::${{ github.event.release.tag_name }}"
        # Note: '::set-output' is deprecated in favor of environment files.
        # For a future-proof version, you might use:
        # run: echo "tag_name=${{ github.event.release.tag_name }}" >> $GITHUB_OUTPUT
        # Then access with steps.get_release_tag.outputs.tag_name

      - name: Update CHANGELOG.md and commit
        run: |
          if ! git diff --quiet CHANGELOG.md; then
            git config user.name "github-actions[bot]"
            git config user.email "github-actions[bot]@users.noreply.github.com"
            
            git add CHANGELOG.md
            git commit -m "docs: Update CHANGELOG.md for release ${{ steps.get_release_tag.outputs.tag_name }} [skip ci]"
            
            # --- THE CRUCIAL CHANGE IS HERE ---
            # Instead of just 'git push', explicitly push to the 'main' branch
            git push origin HEAD:main # Pushes the current (detached HEAD) commit to 'main'
            # OR, if your default branch is 'master':
            # git push origin HEAD:master
            
            echo "CHANGELOG.md updated and pushed."
          else
            echo "CHANGELOG.md is already up-to-date. No commit needed."
          fi
